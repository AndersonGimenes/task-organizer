// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskOrganizer.Repository.Context;

namespace TaskOrganizer.Repository.Migrations
{
    [DbContext(typeof(TaskOrganizerContext))]
    partial class TaskOrganizerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TaskOrganizer.Repository.Entities.ProgressType", b =>
                {
                    b.Property<int>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("ProgressId")
                        .HasName("Fk_ProgressType");

                    b.ToTable("ProgressType");
                });

            modelBuilder.Entity("TaskOrganizer.Repository.Entities.RepositoryTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EstimetedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProgressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("TaskId")
                        .HasName("Fk_Task");

                    b.HasIndex("ProgressId")
                        .IsUnique();

                    b.ToTable("RepositoryTask");
                });

            modelBuilder.Entity("TaskOrganizer.Repository.Entities.RepositoryTask", b =>
                {
                    b.HasOne("TaskOrganizer.Repository.Entities.ProgressType", "ProgressType")
                        .WithOne("RepositoryTask")
                        .HasForeignKey("TaskOrganizer.Repository.Entities.RepositoryTask", "ProgressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
